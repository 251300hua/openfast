##################################################################################################################################
# Registry for ThreeDimBar, creates MODULE ThreeDimBar_Types
# Module ThreeDimBar_Types contains all of the user-defined types needed in ThreeDimBar. It also contains copy, destroy, pack, and
# unpack routines associated with each defined data types.
##################################################################################################################################
# Entries are of the form
# keyword <modulename/modname> <TypeBeingDefined> <FieldType> <FieldName> <Dims> <InitialValue> <Ctrl> "<DESCRIP>" "<UNITS>"
##################################################################################################################################

# ..... Initialization data .......................................................................................................
# Define inputs that the initialization routine may need here:
# e.g., the name of the input file, the file root name, etc.
typedef ThreeDimBar InitInputType CHARACTER(1024) InputFile - - - "Name of the input file; remove if there is no file" -

# Define outputs that the initialization routine may need here:
# e.g., the name of the input file, the file root name, etc.
typedef ThreeDimBar InitOutputType Reki DummyInitVar - - - "A variable" -

# ..... States ....................................................................................................................
# Define continuous (differentiable) states here:
typedef ThreeDimBar ContinuousStateType ReKi DummyContinuousState        - - -  "A variable, Replace if you have discrete states" -

# Define discrete (nondifferentiable) states here:
typedef ThreeDimBar ThreeDimBar_DiscreteStateType ReKi DummyDiscState - - - "A variable, Replace if you have discrete states" -

# Define constraint states here:
typedef ThreeDimBar ConstraintStateType DbKi Force 3 - - "axial force vector"

# Define any data that are not considered actual states here:
# e.g. data used only for efficiency purposes (indices for searching in an array, copies of previous calculations of output
# at a given time, etc.)
typedef ThreeDimBar OtherStateType ReKi DummyOtherState - - - "previous state derivs for m-step time integrator"  -
typedef      ^             ^        IntKi n   - - - "tracks time step for which OtherState was updated last" -

# ..... Parameters ................................................................................................................
# Define parameters here:
# Time step for integration of continuous states (if a fixed-step integrator is used) and update of discrete states:
typedef ThreeDimBar ParameterType DbKi    length0     - - -  "undeformed length of bar" m
typedef      ^              ^       ^     A      - - -  "beam cross sectional area" m^2 
typedef      ^              ^       ^     E      - - -  "beam Young's Modulus" Pa
typedef      ^              ^       ^     pos0   {3}{2} -  "3D location of end points at t = 0" m
typedef      ^              ^     DbKi     dt     - - -  "" s

# ..... Inputs ....................................................................................................................
# Define inputs that are not on this mesh here:
typedef ThreeDimBar    InputType  MeshType  PointMesh1 - - - "" -
typedef ThreeDimBar    InputType  MeshType  PointMesh2 - - - "" -

# Outputs ...................................................................................................................
# Define outputs that are contained on the mesh here:
typedef ThreeDimBar   OutputType  MeshType  PointMesh1 - - - "" -
typedef ThreeDimBar   OutputType  MeshType  PointMesh2 - - - "" -
