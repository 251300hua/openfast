##################################################################################################################################
# Registry for Module3, creates MODULE Module3_Types
# Module Module3_Types contains all of the user-defined types needed in Module3. It also contains copy, destroy, pack, and
# unpack routines associated with each defined data types.
##################################################################################################################################
# Entries are of the form
# keyword <modulename/modname> <TypeBeingDefined> <FieldType> <FieldName> <Dims> <InitialValue> <Ctrl> "<DESCRIP>" "<UNITS>"
##################################################################################################################################

# ..... Initialization data .......................................................................................................
# Define inputs that the initialization routine may need here:
# e.g., the name of the input file, the file root name, etc.
typedef Module3/Mod3 InitInputType CHARACTER(1024) InputFile - - - "Name of the input file; remove if there is no file" -

# Define outputs that the initialization routine may need here:
# e.g., the name of the input file, the file root name, etc.
typedef Module3/Mod3 InitOutputType Reki DummyInitVar - - - "A variable" -

# ..... States ....................................................................................................................
# Define continuous (differentiable) states here:
typedef Module3/Mod3 ContinuousStateType ReKi  DummyContState  - - - "A variable, Replace if you have discrete states" -

# Define discrete (nondifferentiable) states here:
typedef Module3/Mod3 DiscreteStateType ReKi DummyDiscState - - - "A variable, Replace if you have discrete states" -

# Define constraint states here:
typedef Module3/Mod3 ConstraintStateType ReKi H - - - "horizontal tension in the cable" N

# Define any data that are not considered actual states here:
# e.g. data used only for efficiency purposes (indices for searching in an array, copies of previous calculations of output
# at a given time, etc.)
typedef Module3/Mod3 OtherStateType Mod3_ContinuousStateType DummyOtherState - - "A variable, Replace if you have discrete states" -

# ..... Parameters ................................................................................................................
# Define parameters here:
# Time step for integration of continuous states (if a fixed-step integrator is used) and update of discrete states:
typedef Module3/Mod3 ParameterType ReKi   D      - - -  "horizontal span of the cable when q_i is zero" m
typedef      ^              ^      ReKi   L      - - -  "unstretched cable length" m
typedef      ^              ^      ReKi   w      - - -  "cable weight per unit length" N/m
typedef      ^              ^      ReKi   EA     - - -  "cable cross-section estensional stiffness" N
typedef      ^              ^      DbKi   dt     - - -  "time step"
typedef      ^              ^      ReKi   tol    - - -  "tolerance used in NR iteration; also used to avoid ill conditioning" -
typedef      ^              ^     IntKi   itmax  - - -  "maximum number of allowable NR iterations" -

# ..... Inputs ....................................................................................................................
# Define inputs that are not on this mesh here:
#typedef Module3/Mod3    InputType  ReKi   qI      - - - "displacement of virtual interaction node" m
typedef Module3/Mod3   InputType  MeshType  PointMesh - - - "contains displacement" -

# ..... Outputs ...................................................................................................................
# Define outputs that are contained on the mesh here:
#typedef Module3/Mod3   OutputType ReKi   fc      - - -  "coupling force" N
typedef Module3/Mod3   OutputType  MeshType  PointMesh - - - "contains force" -

